"use strict";(self.webpackChunkjennifer5_frontend=self.webpackChunkjennifer5_frontend||[]).push([[46900],{46900:(M,h,a)=>{a.r(h),a.d(h,{LanguageIdCodec:()=>c,LanguagesRegistry:()=>_});var d=a(56491),p=a(60599),L=a(85565),o=a(25507),u=a(49896),y=a(96523),I=a(39642);const g=Object.prototype.hasOwnProperty,l="vs.editor.nullLanguage";class c{constructor(){this._languageIdToLanguage=[],this._languageToLanguageId=new Map,this._register(l,0),this._register(u.vH,1),this._nextLanguageId=2}_register(s,e){this._languageIdToLanguage[e]=s,this._languageToLanguageId.set(s,e)}register(s){if(this._languageToLanguageId.has(s))return;const e=this._nextLanguageId++;this._register(s,e)}encodeLanguageId(s){return this._languageToLanguageId.get(s)||0}decodeLanguageId(s){return this._languageIdToLanguage[s]||l}}class _ extends p.jG{static{this.instanceCount=0}constructor(s=!0,e=!1){super(),this._onDidChange=this._register(new d.vl),this.onDidChange=this._onDidChange.event,_.instanceCount++,this._warnOnOverwrite=e,this.languageIdCodec=new c,this._dynamicLanguages=[],this._languages={},this._mimeTypesMap={},this._nameMap={},this._lowercaseNameMap={},s&&(this._initializeFromRegistry(),this._register(u.W6.onDidChangeLanguages(i=>{this._initializeFromRegistry()})))}dispose(){_.instanceCount--,super.dispose()}_initializeFromRegistry(){this._languages={},this._mimeTypesMap={},this._nameMap={},this._lowercaseNameMap={},(0,o.clearPlatformLanguageAssociations)();const s=[].concat(u.W6.getLanguages()).concat(this._dynamicLanguages);this._registerLanguages(s)}_registerLanguages(s){for(const e of s)this._registerLanguage(e);this._mimeTypesMap={},this._nameMap={},this._lowercaseNameMap={},Object.keys(this._languages).forEach(e=>{const i=this._languages[e];i.name&&(this._nameMap[i.name]=i.identifier),i.aliases.forEach(n=>{this._lowercaseNameMap[n.toLowerCase()]=i.identifier}),i.mimetypes.forEach(n=>{this._mimeTypesMap[n]=i.identifier})}),I.O.as(y.Fd.Configuration).registerOverrideIdentifiers(this.getRegisteredLanguageIds()),this._onDidChange.fire()}_registerLanguage(s){const e=s.id;let i;g.call(this._languages,e)?i=this._languages[e]:(this.languageIdCodec.register(e),i={identifier:e,name:null,mimetypes:[],aliases:[],extensions:[],filenames:[],configurationFiles:[],icons:[]},this._languages[e]=i),this._mergeLanguage(i,s)}_mergeLanguage(s,e){const i=e.id;let n=null;if(Array.isArray(e.mimetypes)&&e.mimetypes.length>0&&(s.mimetypes.push(...e.mimetypes),n=e.mimetypes[0]),n||(n=`text/x-${i}`,s.mimetypes.push(n)),Array.isArray(e.extensions)){e.configuration?s.extensions=e.extensions.concat(s.extensions):s.extensions=s.extensions.concat(e.extensions);for(const t of e.extensions)(0,o.registerPlatformLanguageAssociation)({id:i,mime:n,extension:t},this._warnOnOverwrite)}if(Array.isArray(e.filenames))for(const t of e.filenames)(0,o.registerPlatformLanguageAssociation)({id:i,mime:n,filename:t},this._warnOnOverwrite),s.filenames.push(t);if(Array.isArray(e.filenamePatterns))for(const t of e.filenamePatterns)(0,o.registerPlatformLanguageAssociation)({id:i,mime:n,filepattern:t},this._warnOnOverwrite);if(typeof e.firstLine=="string"&&e.firstLine.length>0){let t=e.firstLine;t.charAt(0)!=="^"&&(t="^"+t);try{const f=new RegExp(t);(0,L.eY)(f)||(0,o.registerPlatformLanguageAssociation)({id:i,mime:n,firstline:f},this._warnOnOverwrite)}catch{}}s.aliases.push(i);let r=null;if(typeof e.aliases<"u"&&Array.isArray(e.aliases)&&(e.aliases.length===0?r=[null]:r=e.aliases),r!==null)for(const t of r)!t||t.length===0||s.aliases.push(t);const m=r!==null&&r.length>0;if(!(m&&r[0]===null)){const t=(m?r[0]:null)||i;(m||!s.name)&&(s.name=t)}e.configuration&&s.configurationFiles.push(e.configuration),e.icon&&s.icons.push(e.icon)}isRegisteredLanguageId(s){return s?g.call(this._languages,s):!1}getRegisteredLanguageIds(){return Object.keys(this._languages)}getLanguageIdByLanguageName(s){const e=s.toLowerCase();return g.call(this._lowercaseNameMap,e)?this._lowercaseNameMap[e]:null}getLanguageIdByMimeType(s){return s&&g.call(this._mimeTypesMap,s)?this._mimeTypesMap[s]:null}guessLanguageIdByFilepathOrFirstLine(s,e){return!s&&!e?[]:(0,o.getLanguageIds)(s,e)}}}}]);
