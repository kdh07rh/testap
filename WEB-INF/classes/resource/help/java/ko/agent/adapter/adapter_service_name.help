트랜잭션의 애플리케이션 명을 기본 이름이 아닌 사용자 정의로 설정 할 경우 사용한다.

** 인터페이스 설명 **

    package aries.runtime;

    public interface IAdapterServiceName {
        /**
         * 웹에서 서비스 이름을 추출한다.
         * RESTful로 되어 있는 URL 이나 포탈등과 같이 특수한 서버들은 비정형적인 URL을 사용하는 경우가 있다. 리턴 값이 null 이면 무시된다.
         * 
         * @param request HttpServletRequest 객체
         * @return 서비스 이름을 반환한다.
         */
        String getHttpServiceName(Object request);
        
        /**
         * Standalone 서비스 이름을 추출한다. 메소드 파라미터를 기반으로 서비스 이름을 결정하는 경우에 사용한다.
         * 
         * @param classMethod  Class + Method 이름
         * @param parameterWrapper 메소드의 파라미터를 정보를 가지고 있는 클래스
         * @return 서비스 이름을 반환한다.
         */
        String getServiceName(String classMethod, ParameterWrapper parameterWrapper);
        
        /**
         * 클래스 명이나 파라미터를 이용하여 서비스 이름을 결정하는 경우에 사용한다.
         * 
         * @param classMethod  Class + Method 이름
         * @param parameterWrapper 메소드의 파라미터를 정보를 가지고 있는 클래스
         * @return 서비스 이름을 반환한다.
         */
        String changeServiceName(String classMethod, ParameterWrapper parameterWrapper);

        /**
         * 클래스 명이나 리턴값을 이용하여 서비스 이름을 결정하는 경우에 사용한다.
         * 
         * @param classMethod  Class + Method 이름
         * @param returnValue 메소드의 리턴 값
         * @return 서비스 이름을 반환한다.
         */
        String changeServiceName(String classMethod, Object returnValue);
        
        /**
         * 기본 구현은 append 정보로 full descriptor 가 넘어와 '+' 기호와 함께 이미 설정된 서비스 이름 뒤에 지정된 값을 추가로 설정한다.
         * 이 내용을 변경하고 싶을 경우 사용한다.
         * 
         * @param name  이미 설정된 서비스 이름
         * @param append  이미 설정된 이름에 추가할 값
         * @return 서비스 이름을 반환한다.
         */
        String appendServiceName(String name, String append);
        
        /**
         * 기본적으로 appendServiceName(String name, String append) 와 동일 하고 추가 정보로 파라미터 정보들이 넘어 온다.
         * 
         * @param name  이미 설정된 서비스 이름
         * @param append  이미 설정된 이름에 추가할 값
         * @param parameterWrapper 메소드의 파라미터를 정보를 가지고 있는 클래스
         * @return 서비스 이름을 반환한다.
         */
        String appendServiceName(String name, String append, ParameterWrapper parameterWrapper);

        /**
         * 기본적으로 appendServiceName(String name, String append) 와 동일 하고 추가 정보로 리턴값이 넘어 온다.
         * 
         * @param name  이미 설정된 서비스 이름
         * @param append  이미 설정된 이름에 추가할 값
         * @param returnValue 메소드의 리턴 값
         * @return 서비스 이름을 반환한다.
         */
        String appendServiceName(String name, String append, Object returnValue);
    }

- - -

**주요 객체의 메소드 설명**

###### ParameterWrapper 객체
    public int size() : 파라미터 개수를 리턴한다.
    public Object getThis() : 파라미터를 수집한 메소드의 객체를 반환한다.
    public Object[] getValues() : 메소드의 파라미터 배열을 반환한다.
    public Object get(int idx) : 해당 위치의 파라미터를 반환한다.
    public Parameter getParameter() : 원본 Parameter 객체를 반환한다.

- - -

**설정방법**

어댑터를 구현한 클래스를 jennifer.impl.XXX.jar 형태로 jennifer.jar 와 동일한 위치에 놓으면 별도의 설정 없이 해당 라이브러리를 자동으로 인식한다.
버전관리를 위해서 jennifer.impl.custom-1.0.1.jar 와 같은 형식을 사용하면 편리하다.

라이브러리 추가후 옵션에 구현한 어댑터 클래스 명을 등록하면 된다.

    ex) aries.runtime.custom.SampleServiceName

- - -

**예제**

    public class SampleServiceName extends AbstractDefaultAdapter implements IAdapterServiceName
    {
        public String getHttpServiceName(Object request)
        {
            if (request != null && request instanceof HttpServletRequest)
            {
                return ((HttpServletRequest) request).getRequestURI();
            }

            return null;
        }

        public String getServiceName(String classMethod, ParameterWrapper parameterWrapper)
        {
            return order(classMethod, parameterWrapper);
        }

        public String changeServiceName(String classMethod, ParameterWrapper parameterWrapper)
        {
            return order(classMethod, parameterWrapper);
        }

        public String changeServiceName(String classMethod, Object returnValue)
        {
            if (returnValue != null && returnValue instanceof String)
            {
                return (String) returnValue;
            }

            return classMethod;
        }

        public String appendServiceName(String name, String append)
        {
            return name + '+' + append;
        }

        public String appendServiceName(String name, String append, ParameterWrapper parameterWrapper)
        {
            return name + '+' + order(append, parameterWrapper);
        }

        public String appendServiceName(String name, String append, Object returnValue)
        {
            return name + '+' + returnValue;
        }
    }

---

* 기본값 : 없음
* 형식 : 문자열
* 샘플값 : aries.runtime.custom.SampleServiceName
* 재시작 : 안함
* 지원 버전 : 5.0.0