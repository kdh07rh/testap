애플리케이션에서 DB 트랜잭션을 직접 관리하는 경우 java.sql.Connection 객체를 통해 java.sql.Statement 객체를 생성하고, execute, executeBatch, executeUpdate 메소드를 실행하고 명시적으로 commit 혹은 rollback 을 호출하지 않을 때 에이전트가 자동으로 rollback 메소드를 호출해 주는 기능이다.

다음은 일반적은 패턴의 예제 이다.
        
    Connection connection = datasource.getConnection();
    connection.setAutoCommit(false);
    
    Statement stmt = connection.createStatement();
    stmt.executeUpdate("UPDATE sample SET col='col'");
    connection.close();

이 옵션을 활성화 하면 java.sql.Connection 객체가 close 될 때 다음 코드를 실행 한다.
 
    connection.rollback();
    connection.setAutoCommit(true);

**애플리케이션의 코드에 대단히 종속적인 기능이므로 반드시 검증 후에 사용해야 한다. 검증된 시스템이 아닌 경우에 이 옵션을 true로 설정하는 것을 권장하지 않는다. java.sql.Connection 객체의 close 메소드가 호출되는 시점의 자바 쓰레드 다른 자바 쓰레드에서 rollback 메소드가 호출되면 장애가 발생할 수 있다.**

---

* 기본값 : false
* 형식 : Boolean
* 재시작 : 안함
* 연관 옵션
   * [ignore_rollback_uncommited_error](./agentHelp?key=ignore_rollback_uncommited_error&type=1)
* 지원 버전 : 5.0.0